trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'MyAzureDevSubscription'
  dockerRegistryServiceConnection: 'devDockerRegistryConnection'
  imageName: 'roulette-frontend'
  resourceGroup: 'roulette-dev-rg'
  kubernetesCluster: 'roulette-aks'
  namespace: 'default'

stages:
- stage: BuildAndPush
  displayName: 'Build and Push Frontend Image'
  jobs:
  - job: DockerBuild
    displayName: 'Build and Push Image to ACR'
    steps:
    - task: Docker@2
      displayName: 'Build and Push'
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: frontend/Dockerfile
        tags: |
          latest

- stage: SecurityScan
  displayName: 'Trivy Security Scan (Optional)'
  dependsOn: BuildAndPush
  jobs:
  - job: TrivyScan
    displayName: 'Run Trivy on Frontend Image'
    steps:
    - script: |
        curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
        ./trivy image roulette-frontend:latest || true
      displayName: 'Trivy Image Vulnerability Scan'

- stage: Deploy
  displayName: 'Deploy Frontend to AKS'
  dependsOn: BuildAndPush
  jobs:
  - job: DeployFrontend
    displayName: 'kubectl apply frontend manifests'
    steps:
    - task: Kubernetes@1
      displayName: 'Deploy Frontend to AKS'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: $(azureSubscription)
        azureResourceGroup: $(resourceGroup)
        kubernetesCluster: $(kubernetesCluster)
        namespace: $(namespace)
        command: apply
        arguments: '-f k8s/frontend-deployment.yaml -f k8s/frontend-service.yaml'
