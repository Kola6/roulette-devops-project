trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: 'devDockerRegistryConnection'
  imageName: 'roulette-frontend'
  azureSubscription: 'MyAzureDevSubscription'
  resourceGroup: 'roulette-dev-rg'
  kubernetesCluster: 'roulette-aks'
  namespace: 'default'

jobs:

- job: TerraformFrontend
  displayName: 'Terraform Init, Plan & Apply'
  steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          cd terraform
          terraform init \
            -backend-config="resource_group_name=roulette-dev-rg" \
            -backend-config="storage_account_name=roulettestorage" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=roulette.tfstate"
          terraform apply -auto-approve

- job: BuildFrontend
  dependsOn: TerraformFrontend
  displayName: 'Build & Test Frontend'
  steps:
    - task: Docker@2
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)
        command: build
        Dockerfile: frontend/Dockerfile
        tags: latest

    - script: |
        docker run --rm roulette-frontend:latest npm run test || echo "No tests found"
      displayName: 'Run Frontend Tests'

- job: DeployFrontend
  dependsOn: BuildFrontend
  displayName: 'Deploy Frontend to AKS'
  steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: $(azureSubscription)
        azureResourceGroup: $(resourceGroup)
        kubernetesCluster: $(kubernetesCluster)
        namespace: $(namespace)
        command: apply
        arguments: '-f k8s/frontend-deployment.yaml'
